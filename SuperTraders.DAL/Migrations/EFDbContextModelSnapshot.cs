// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperTraders.DAL.Repository.Implementation.EntityFramework;

#nullable disable

namespace SuperTraders.DAL.Migrations
{
    [DbContext(typeof(EFDbContext))]
    partial class EFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SuperTraders.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.HasIndex("PortfolioId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8500),
                            FullName = "Emre Kurtar",
                            PortfolioId = 1,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8513)
                        },
                        new
                        {
                            CustomerId = 2,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8515),
                            FullName = "Can Avsar",
                            PortfolioId = 2,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8516)
                        },
                        new
                        {
                            CustomerId = 3,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8517),
                            FullName = "Ugur Evren",
                            PortfolioId = 3,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8518)
                        },
                        new
                        {
                            CustomerId = 4,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8518),
                            FullName = "Kemal Kilicdaroglu",
                            PortfolioId = 4,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8519)
                        },
                        new
                        {
                            CustomerId = 5,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8520),
                            FullName = "Tayyip Erdogan",
                            PortfolioId = 5,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 268, DateTimeKind.Local).AddTicks(8520)
                        });
                });

            modelBuilder.Entity("SuperTraders.Entities.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioId"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PortfolioId");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            PortfolioId = 1,
                            Balance = 100m,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5693),
                            CustomerId = 1,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5697)
                        },
                        new
                        {
                            PortfolioId = 2,
                            Balance = 90m,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5698),
                            CustomerId = 2,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5699)
                        },
                        new
                        {
                            PortfolioId = 3,
                            Balance = 85m,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5700),
                            CustomerId = 3,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5700)
                        },
                        new
                        {
                            PortfolioId = 4,
                            Balance = 80m,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5701),
                            CustomerId = 4,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5702)
                        },
                        new
                        {
                            PortfolioId = 5,
                            Balance = 75m,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5703),
                            CustomerId = 5,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(5703)
                        });
                });

            modelBuilder.Entity("SuperTraders.Entities.Share", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("char(3)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Symbol");

                    b.ToTable("Shares");

                    b.HasData(
                        new
                        {
                            Symbol = "ATP",
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7149),
                            Price = 5m,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7152)
                        },
                        new
                        {
                            Symbol = "EKG",
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7153),
                            Price = 10m,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7154)
                        },
                        new
                        {
                            Symbol = "SIS",
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7155),
                            Price = 15m,
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7155)
                        });
                });

            modelBuilder.Entity("SuperTraders.Entities.Trade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShareSymbol")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ShareSymbol");

                    b.ToTable("Trades");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7828),
                            Direction = 0,
                            IsActive = true,
                            PortfolioId = 1,
                            Quantity = 2,
                            ShareSymbol = "ATP",
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7829)
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7832),
                            Direction = 0,
                            IsActive = true,
                            PortfolioId = 2,
                            Quantity = 3,
                            ShareSymbol = "ATP",
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7832)
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7834),
                            Direction = 0,
                            IsActive = true,
                            PortfolioId = 3,
                            Quantity = 4,
                            ShareSymbol = "EKG",
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7834)
                        },
                        new
                        {
                            ID = 4,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7836),
                            Direction = 0,
                            IsActive = true,
                            PortfolioId = 4,
                            Quantity = 2,
                            ShareSymbol = "EKG",
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7836)
                        },
                        new
                        {
                            ID = 5,
                            CreatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7838),
                            Direction = 0,
                            IsActive = true,
                            PortfolioId = 5,
                            Quantity = 1,
                            ShareSymbol = "SIS",
                            UpdatedAt = new DateTime(2023, 5, 26, 22, 49, 25, 269, DateTimeKind.Local).AddTicks(7838)
                        });
                });

            modelBuilder.Entity("SuperTraders.Entities.Customer", b =>
                {
                    b.HasOne("SuperTraders.Entities.Portfolio", "Portfolio")
                        .WithOne("Customer")
                        .HasForeignKey("SuperTraders.Entities.Customer", "PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("SuperTraders.Entities.Trade", b =>
                {
                    b.HasOne("SuperTraders.Entities.Portfolio", "Portfolio")
                        .WithMany("Trades")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperTraders.Entities.Share", "Share")
                        .WithMany("Trades")
                        .HasForeignKey("ShareSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");

                    b.Navigation("Share");
                });

            modelBuilder.Entity("SuperTraders.Entities.Portfolio", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("SuperTraders.Entities.Share", b =>
                {
                    b.Navigation("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
